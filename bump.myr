use sys
use "heap"
use std

pkg bumpheap =
	type allocator(@s)
	generic mk : (-> allocator(@a)) :: heap.layer @a
	impl heap.layer allocator(@s) -> @b#
;;

type allocator(@s) = struct
	s	: @s
	base	: void#
	len	: sys.size
	cap	: sys.size
;;

generic mk = {-> allocator(@a)
	var a = [ .base = (0 : void#), .len = 0, .cap = 4096]
	var p : byte[4096]# = heap.get(a.s)
	std.put("mk p:{}\n", p)
	a.base = (p : void#)
	-> a
}

impl heap.layer allocator(@s) -> @b# =
	get = {a
		std.put("base:{} len:{} cap:{}\n", a.base, a.len, a.cap)
		var nextlen = a.len + sizeof(@b)
		if nextlen > a.cap
			-> (0 : @b#)
		;;
		a.len = nextlen
		-> (((a.base : sys.intptr) + (nextlen : sys.intptr)) : @b#)
	}
	put = {a, p;}
;;
